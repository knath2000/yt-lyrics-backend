name: Deploy to Modal and Fly.io

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-modal:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Modal CLI
        run: |
          pip install modal
          
      - name: Deploy Modal Functions
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
        run: |
          # Deploy Modal functions if modal directory exists
          if [ -d "modal" ]; then
            cd modal
            modal deploy transcribe.py
          else
            echo "No modal directory found, skipping Modal deployment"
          fi

  deploy-fly:
    runs-on: ubuntu-latest
    needs: deploy-modal
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run build
        run: npm run build
        
      - name: Run tests (if any)
        run: |
          if [ -f "package.json" ] && npm run | grep -q "test"; then
            npm test
          else
            echo "No tests found, skipping test step"
          fi 